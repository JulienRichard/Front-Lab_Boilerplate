//////////////////////////////////////////////////////////
// BUTTONS
//////////////////////////////////////////////////////////
$button-sizes: (
  tiny: .75rem,
  small: .9rem,
  default: 1rem,
  large: 1.5rem
);
$button-fill: solid; // (or hollow)
$button-radius: $global-radius;
$button-hollow-border: 2px;
$button-txt-color: rgba($white, .8);
$button-txt-color-hover: $white;
$button-background-color: $primary-color;
$button-background-color-hover: scale-color($button-background-color, $lightness: -20%);
$button-opacity-disabled: .25;

@import 'mixins';

%button {
  @include _button;

  // -- SIZES
  &.is-tiny {
    @include adjust-font-size-to(map-get($button-sizes, tiny));
    @include padding-block(0, .25, 0, .25);
  }

  &.is-small {
    @include adjust-font-size-to(map-get($button-sizes, small));
    @include padding-block(.25, .5, .25, .5);
    margin-bottom: rhythm(.5);
  }

  &.is-large {
    @include adjust-font-size-to(map-get($button-sizes, large));
    @include padding-block(.5, 1, .5, 1);
  }

  &.is-expanded {
    @include _button-expand;
  }

  // -- COLORS
  @each $name, $color in $base-palette {
    @if $button-fill != hollow {
      &.is-#{$name} {
        @if $name == light {
          @include _button-solid($color, $color, $primary-color);
        } @else {
          @include _button-solid($color);
        }
      }
    } @else {
      &.is-#{$name} {
        @include _button-hollow($color);
      }
    }
  }
  @each $name, $color in $helpers-palette {
    @if $button-fill != hollow {
      &.is-#{$name} {
        @include _button-solid($color);
      }
    } @else {
      &.is-#{$name} {
        @include _button-hollow($color);
      }
    }
  }
  @each $name, $color in $social-palette {
    @if $button-fill != hollow {
      &.is-#{$name} {
        @include _button-solid($color);
      }
    } @else {
      &.is-#{$name} {
        @include _button-hollow($color);
      }
    }
  }

  // -- HOLLOW STYLE
  @if $button-fill != hollow {
    &.is-hollow {
      @include _button-hollow;

      @each $name, $color in $base-palette {
        &.is-#{$name} {
          @if $name == light {
            @include _button-hollow($color, $color, $primary-color);
          } @else {
            @include _button-hollow($color);
          }
        }
      }
      @each $name, $color in $helpers-palette {
        &.is-#{$name} {
          @include _button-hollow($color);
        }
      }
      @each $name, $color in $social-palette {
        &.is-#{$name} {
          @include _button-hollow($color);
        }
      }
    }
  }

  // -- ROUNDED STYLE
  &.is-rounded {
    border-radius: 2em;
  }

  // -- DISABLED STYLE
  &.is-disabled,
  &[disabled] {
    @include _button-disabled;
  }

  // -- DROPDOWN ARROW
  &.is-dropdown {
    @include _button-dropdown;
  }
}

//////////////////////////////////////////////////////////
//  BUTTONS > MARKUP
//////////////////////////////////////////////////////////
@mixin frontlab-buttons {
  // DEFAULT BUTTONS
  .button {
    @extend %button;
  }

  // ICONS BUTTONS
  .button-icon {
    @extend %button;
    padding-left: 0;
    padding-right: 0;
    @include output-rhythm(width, rhythm(2));

    &.is-tiny {
      @include output-rhythm(height, rhythm(1));
      @include output-rhythm(width, rhythm(1));
    }

    &.is-small {
      @include output-rhythm(height, rhythm(1.5));
      @include output-rhythm(width, rhythm(1.5));
    }

    &.is-large {
      @include output-rhythm(height, rhythm(3));
      @include output-rhythm(width, rhythm(3));
    }
  }
}

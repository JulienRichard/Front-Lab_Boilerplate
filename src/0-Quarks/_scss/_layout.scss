//////////////////////////////////////////////////////////
// LAYOUT MIXINS
//////////////////////////////////////////////////////////

//	WRAPPER
//	---------------
@mixin _wrapper {
  position: relative;
  @include flex-grid-row($base: false);
  @include flex-grid-size(map-get($wrapper-sizes, small));
  padding-left: rhythm(.5);
  padding-right: rhythm(.5);
  @each $breakpoint, $value in $wrapper-sizes {
    @if $breakpoint != small {
      @include breakpoint($breakpoint) {
        @include flex-grid-size($value);
      }
    }
  }
}

//	PADDING BLOCK
//	---------------
@mixin padding-block( $top: 1, $right: $top, $bottom: $top, $left: $top ) {
  @include output-rhythm(padding-top, rhythm($top));
  @include output-rhythm(padding-right, rhythm($right));
  @include output-rhythm(padding-bottom, rhythm($bottom));
  @include output-rhythm(padding-left, rhythm($left));
}

@mixin padding($direction, $value: 1) {
  @include output-rhythm(padding-#{$direction}, rhythm($value));
}

//	MARGIN BLOCK
//	---------------
@mixin margin-block( $top: 1, $right: $top, $bottom: $top, $left: $top ) {
  @include output-rhythm(margin-top, rhythm($top));
  @include output-rhythm(margin-right, rhythm($right));
  @include output-rhythm(margin-bottom, rhythm($bottom));
  @include output-rhythm(margin-left, rhythm($left));
}

@mixin margin($direction, $value: 1) {
  @include output-rhythm(margin-#{$direction}, rhythm($value));
}

//  CENTER X/Y
//	---------------
@mixin center($xy:xy) {
  // position: absolute;
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    transform: translate(-50%, -50%);
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
  }
}

//  FILL
//	---------------
@mixin fill($padding: 0) {
  position: absolute;
  top: $padding;
  bottom: $padding;
  left: $padding;
  right: $padding;
}
